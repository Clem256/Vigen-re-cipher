IDENTIFICATION DIVISION.
PROGRAM-ID. VIGENERE.

DATA DIVISION.
WORKING-STORAGE SECTION.

    01 CHOICE           PIC 99.
    01 TEXTE            PIC X(50) VALUE SPACES.
    01 CLE              PIC X(50) VALUE SPACES.
    01 TEXTE-TRIM       PIC X(50) VALUE SPACES.
    01 CLE-TRIM         PIC X(50) VALUE SPACES.
    01 RES              PIC X(50) VALUE SPACES.

    01 I                PIC 99 VALUE 1.
    01 K                PIC 99 VALUE 1.
    01 TEXT-LEN         PIC 99.
    01 CLE-LEN          PIC 99.
    
    01 BASE-ASCII     PIC 999 VALUE 66. 
    01 CODE-TEXT      PIC S9(3).
    01 CODE-CLE       PIC S9(3).
    01 CODE-RESULT    PIC S9(3).

    01 CHAR-TEXT        PIC X.
    01 CHAR-CLE         PIC X.
    01 CHAR-RESULT      PIC X.
    

PROCEDURE DIVISION.
    DISPLAY "=== Choix entre chiffrement et déchiffrement ==="
    DISPLAY "1. Chiffrement"
    DISPLAY "2. Déchiffrement"
    ACCEPT CHOICE

    EVALUATE CHOICE
        WHEN 1
            PERFORM CHIFFRER
        WHEN 2
            PERFORM DECHIFFRER
        WHEN OTHER
            DISPLAY "Error"
    END-EVALUATE

    STOP RUN.

CHIFFRER.
    DISPLAY "=== CHIFFREMENT DE VIGENERE ==="

    DISPLAY "Donner le texte : "
    ACCEPT TEXTE

    DISPLAY "Donner la cle : "
    ACCEPT CLE
    
    MOVE FUNCTION TRIM(TEXTE) TO TEXTE-TRIM
    MOVE FUNCTION UPPER-CASE(TEXTE-TRIM) TO TEXTE-TRIM

    MOVE FUNCTION TRIM(CLE) TO CLE-TRIM
    MOVE FUNCTION UPPER-CASE(CLE-TRIM) TO CLE-TRIM

    COMPUTE TEXT-LEN = FUNCTION LENGTH(FUNCTION TRIM(TEXTE-TRIM))
    COMPUTE CLE-LEN = FUNCTION LENGTH(FUNCTION TRIM(CLE-TRIM))

    IF CLE-LEN = 0
        DISPLAY "Erreur: La cle ne peut pas etre vide."
        STOP RUN
    END-IF

    MOVE SPACES TO RES
    MOVE 1 TO K

    PERFORM VARYING I FROM 1 BY 1 UNTIL I > TEXT-LEN
        MOVE TEXTE-TRIM(I:1) TO CHAR-TEXT

        IF CHAR-TEXT IS ALPHABETIC
            MOVE CLE-TRIM(K:1) TO CHAR-CLE

            COMPUTE CODE-TEXT = FUNCTION ORD(CHAR-TEXT) - BASE-ASCII
            COMPUTE CODE-CLE  = FUNCTION ORD(CHAR-CLE)  - BASE-ASCII
            COMPUTE CODE-RESULT = FUNCTION MOD(CODE-TEXT + CODE-CLE, 26)
            COMPUTE CODE-RESULT = CODE-RESULT + BASE-ASCII
            MOVE FUNCTION CHAR(CODE-RESULT) TO CHAR-RESULT

            MOVE CHAR-RESULT TO RES(I:1)

            ADD 1 TO K
            IF K > CLE-LEN THEN
                MOVE 1 TO K
            END-IF
        ELSE
            MOVE CHAR-TEXT TO RES(I:1)
        END-IF
    END-PERFORM

    DISPLAY "Texte chiffre : " RES(1:TEXT-LEN)
    DISPLAY "Texte original : " TEXTE-TRIM(1:TEXT-LEN)
    DISPLAY "Clé utilisée   : " CLE-TRIM(1:CLE-LEN)
    GOBACK.

DECHIFFRER.
    DISPLAY "=== DECHIFFREMENT DE VIGENERE ==="
    DISPLAY "Donner le texte crypté : "
    ACCEPT TEXTE
        
    DISPLAY "Donner la cle : "
    ACCEPT CLE

    MOVE FUNCTION TRIM(TEXTE) TO TEXTE-TRIM
    MOVE FUNCTION UPPER-CASE(TEXTE-TRIM) TO TEXTE-TRIM

    MOVE FUNCTION TRIM(CLE) TO CLE-TRIM
    MOVE FUNCTION UPPER-CASE(CLE-TRIM) TO CLE-TRIM

    COMPUTE TEXT-LEN = FUNCTION LENGTH(FUNCTION TRIM(TEXTE-TRIM))
    COMPUTE CLE-LEN = FUNCTION LENGTH(FUNCTION TRIM(CLE-TRIM))

    IF CLE-LEN = 0
        DISPLAY "Erreur: La cle ne peut pas etre vide."
        STOP RUN
    END-IF

    MOVE SPACES TO RES
    MOVE 1 TO K

    PERFORM VARYING I FROM 1 BY 1 UNTIL I > TEXT-LEN
        MOVE TEXTE-TRIM(I:1) TO CHAR-TEXT

        IF CHAR-TEXT IS ALPHABETIC
            MOVE CLE-TRIM(K:1) TO CHAR-CLE
            
            COMPUTE CODE-TEXT = FUNCTION ORD(CHAR-TEXT) - BASE-ASCII
            COMPUTE CODE-CLE = FUNCTION ORD(CHAR-CLE) - BASE-ASCII
            COMPUTE CODE-RESULT = FUNCTION MOD(CODE-TEXT + 26 - CODE-CLE, 26)
            COMPUTE CODE-RESULT = CODE-RESULT + BASE-ASCII
            MOVE FUNCTION CHAR(CODE-RESULT) TO CHAR-RESULT

            MOVE CHAR-RESULT TO RES(I:1)

            ADD 1 TO K
            IF K > CLE-LEN THEN
                MOVE 1 TO K
            END-IF
        ELSE
            MOVE CHAR-TEXT TO RES(I:1)
        END-IF
    END-PERFORM

    DISPLAY "Texte déchiffré : " RES(1:TEXT-LEN)
    DISPLAY "Texte chiffré  : " TEXTE-TRIM(1:TEXT-LEN)
    DISPLAY "Clé utilisée   : " CLE-TRIM(1:CLE-LEN)
    GOBACK.
